uname --> username
uname -a --> all the details along with uname
uname --help

ls --help
ls --ltra

$ --> whoami --> normal user
# --> whoami --> root

windows --> admin --> installation run as admin
root --> admin 

sudo su - --> root permissions and root user

sudo su -
yum install git
ec2-user sudo yum install git -y

pwd --> present working directory
cd --> change directory

mkdir test --> folder named test is created
mkdir --> make directory

touch example.txt

cat > example.txt <enter>
Hi i am learning Linux

<Enter>
<cntrl+d>

cat >> example.txt <enter>
Add new content

cat example.txt
now we will have both the contents earlier one and second entry

example file --> Create --> touch example.txt
example file --> Write --> cat > example.txt
example file --> Read --> cat example.txt
example file --> Modify --> cat >> example.txt

cd .. --> move cursor one folder back

rmdir --> remove directory
rmdir: failed to remove 'test/': Directory not empty 
rmdir works well if the directory is empty

if folder is not empty use rm -r to delete. rm -r meaning remove recurssive.

if we have to copy a file from one location to other location
cp <source_location> <destination_location>

What is Absolute path ?
/c/Users/prave/DevOps_Keys
What is Relative Path ?
Devops

cd / --> change directory to root

ls -l --> long list and alphabetical order file display 
ls -lr --> reverse alphabetical
ls -lt --> time related latest at top
ls -ltr --> time related oldest at top
ls -ltra --> along with hidden files

cat display file contents on the prompt
vi --> enter vi editor
vim --> enter vim editor
nano --> enter nano editor

grep is very important
grep is for search
grep <word> <filename>
grep -i <word> <filename>
grep -ni <word> <filename>


wget --> downloads the url page as a file in the current working directory or present working directory
wget <url>

curl --> displays the data present in the URL on to the command prompt screen in the linux.
curl <url> 

vi 

:
esc
INSERT --> i
:
wq
:
q
:
q!


Pattern Operations:
| --> symbol

Pipe:
output of one operation becomes input to the next operation when you use pipe in Linux

example using |:
grep sbin passwd | grep -v /usr/ > tes1.txt
result will be like below:
games:x:12:100:games:/usr/games:/sbin/nologin
systemd-network:x:192:192:systemd Network Management:/:/usr/sbin/nologin
systemd-oom:x:999:999:systemd Userspace OOM Killer:/:/usr/sbin/nologin
systemd-resolve:x:193:193:systemd Resolver:/:/usr/sbin/nologin
sshd:x:74:74:Privilege-separated SSH:/usr/share/empty.sshd:/sbin/nologin
libstoragemgmt:x:997:997:daemon account for libstoragemgmt:/:/usr/sbin/nologin
systemd-coredump:x:996:996:systemd Core Dumper:/:/usr/sbin/nologin
systemd-timesync:x:995:995:systemd Time Synchronization:/:/usr/sbin/nologin


AWK Command:

cat passwd
full file contents are displayed

i want lines which do not have sbin
grep -v sbin 

root:x:0:0:root:/root:/bin/bash
ec2-user:x:1000:1000:EC2 Default User:/home/ec2-user:/bin/bash

cat passwd |grep -v sbin | awk -F "/" '{print $1}'

root:x:0:0:root:
ec2-user:x:1000:1000:EC2 Default User:

amazon.com:praveen
flipkart.com:kiran
instamart.com:arun
swiggy.com:radha
nobroker.com:krishna



